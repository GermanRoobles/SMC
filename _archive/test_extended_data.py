#!/usr/bin/env python3
"""
Script de prueba para validar los datos extendidos
"""

from fetch_data import get_ohlcv_extended, get_ohlcv
import pandas as pd
from datetime import datetime

def test_extended_data():
    """Probar la funci√≥n de datos extendidos"""
    print("üß™ Probando datos extendidos...")

    # Comparar datos normales vs extendidos
    symbol = "BTC/USDT"
    timeframe = "15m"

    print(f"\nüìä Obteniendo datos normales para {symbol} en {timeframe}...")
    df_normal = get_ohlcv(symbol, timeframe)
    print(f"   ‚úÖ Datos normales: {len(df_normal)} puntos")
    if len(df_normal) > 0:
        print(f"   üìÖ Desde: {df_normal['timestamp'].min()}")
        print(f"   üìÖ Hasta: {df_normal['timestamp'].max()}")

    print(f"\nüìä Obteniendo datos extendidos (5 d√≠as) para {symbol} en {timeframe}...")
    df_extended = get_ohlcv_extended(symbol, timeframe, days=5)
    print(f"   ‚úÖ Datos extendidos: {len(df_extended)} puntos")
    if len(df_extended) > 0:
        print(f"   üìÖ Desde: {df_extended['timestamp'].min()}")
        print(f"   üìÖ Hasta: {df_extended['timestamp'].max()}")

    # Calcular diferencia
    if len(df_normal) > 0 and len(df_extended) > 0:
        ratio = len(df_extended) / len(df_normal)
        print(f"\nüìà Ratio de datos extendidos: {ratio:.2f}x m√°s datos")

        # Verificar que tenemos m√°s datos
        if len(df_extended) > len(df_normal):
            print("‚úÖ Los datos extendidos contienen m√°s informaci√≥n")
        else:
            print("‚ö†Ô∏è Los datos extendidos no contienen m√°s informaci√≥n")

    return df_extended

if __name__ == "__main__":
    test_extended_data()
